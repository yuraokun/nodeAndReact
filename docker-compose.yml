version: "3.8"

networks:
  nodejs:

services:
  nodejs:
    # build:
    #   context: .
    #   dockerfile: ./node/Dockerfile
    image: node:16.13.0
    container_name: nodejs
    ports:
      - "8099:80"
      - "3005:3000"
    tty: true
    volumes:
      - ./src:/usr/src
    working_dir: "/usr/src"
    depends_on:
      - db

    command: npx nodemon ./app2/app.js

    # volumes:
    #   # - "./src:/usr/share/nginx/html
    #   - ./src:/var/www/html
    #   - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    # depends_on:
    #   - php
    #   - db
    networks:
      - nodejs
  db:
    image: mysql:latest
    restart: unless-stopped
    tty: true
    ports:
      - "5000:3306"
    environment:
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
      TZ: "Asia/Tokyo"
    volumes:
      - ./db/database:/var/lib/mysql
      - ./db/conf.d/my.cnf:/etc/mysql/my.cnf
    networks:
      - nodejs

  # app:
  #   build:
  #     context: .
  #     dockerfile: ./docker/php/Dockerfile
  #   volumes:
  #     - ./src/:/var/www/html
  #   environment:
  #     - DB_CONNECTION=mysql
  #     - DB_HOST=db
  #     - DB_PORT=3306
  #     - DB_DATABASE=${DB_NAME}
  #     - DB_USERNAME=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}

  # web:
  #   build:
  #     context: .
  #     dockerfile: ./docker/nginx/Dockerfile
  #   ports:
  #     - ${WEB_PORT}:80
  #   depends_on:
  #     - app
  #   volumes:
  #     - ./src/:/var/www/html

  # db:
  #   build:
  #     context: .
  #     dockerfile: ./docker/mysql/Dockerfile
  #   ports:
  #     - ${DB_PORT}:3306
  #   environment:
  #     MYSQL_DATABASE: ${DB_NAME}
  #     MYSQL_USER: ${DB_USER}
  #     MYSQL_PASSWORD: ${DB_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #     TZ: 'Asia/Tokyo'
  #   volumes:
  #     - mysql-volume:/var/lib/mysql
